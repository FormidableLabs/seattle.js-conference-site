---
import ConfSocialCard from '@/components/conf/ConfSocialCard.astro'
import PageContainer from '@/components/PageContainer.astro'
import Speaker from '@/components/Speaker.astro'
import conf from '@/data/conf-2023.json'
import BaseLayout from '@/layouts/BaseLayout.astro'
import { toHTML } from '@/utils/markdown'
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro'

export const getStaticPaths = (async () => {
  // TODO: Add meetup workshop data
  //
  // const meetupTalks = talks.map(talk => {
  //   const speaker = speakers.find(s => s.id === talk.speaker_id)
  //   if (!speaker) {
  //     throw new Error(`Speaker not found for talk ${talk.id}`)
  //   }
  //
  //   return {
  //     params: { id: talk.id },
  //     props: {
  //       type: 'meetup',
  //       talk,
  //       speaker,
  //     },
  //   }
  // })

  const confTalks = conf.workshops.map(workshop => {
    return {
      params: { id: workshop.id },
      props: {
        type: 'conf-2023',
        workshop,
        speaker: workshop.speaker,
      },
    }
  })

  return [...confTalks]
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { type, workshop } = Astro.props as Props
const { topics, abstract, speaker } = workshop
const speakerPhoto = `/_public/images/speakers/${speaker.photo}`

const pageTitle = `SeattleJS Conf 2023 - ${workshop.title}`
const sharing = {
  image: `/_public/images/social/${workshop.id}.png`,
}
---

<BaseLayout pageTitle={pageTitle} sharing={sharing}>
  {
    type === 'conf-2023' && (
      <div id="social-card" hidden>
        <ConfSocialCard
          name={speaker.name}
          photo={speakerPhoto}
          title={workshop.title}
        />
      </div>
    )
  }

  <PageContainer pageTitle={workshop.title}>
    {
      topics ? (
        <div class="topics">
          {topics.map(t => (
            <div class="topic">{t}</div>
          ))}
        </div>
      ) : null
    }
    <div class="abstract" set:html={toHTML(abstract)} />
    <div class="cta">
      <a target="_blank" href="https://ti.to/event-loop/seattlejs-conf-2023/"
        >Register</a
      >
    </div>
    <Speaker speaker={speaker} />
  </PageContainer>
</BaseLayout>

<style>
  .topics {
    display: flex;
    flex-wrap: wrap;
  }

  .topic {
    display: inline-block;
    background-color: #cfd3e4;
    text-decoration: none;
    margin: 3px;
    padding: 8px;
  }
</style>

<script>
  import { initializeQuerySwitch } from '@/scripts/initializeQuerySwitch'

  if (document.getElementById('social-card')) {
    initializeQuerySwitch([
      ['social', '#social-card'],
      ['', '#main'],
    ])
  }
</script>
