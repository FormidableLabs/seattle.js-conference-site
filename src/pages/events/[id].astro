---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import { marked } from 'marked'

import { inflateEvent } from '@/utils/data'
import PageLayout from '@/layouts/PageLayout.astro'
import events from '@/data/events.json'

export const getStaticPaths = (async () => {
  return events.map(event => ({ params: { id: event.id }, props: { event } }))
}) satisfies GetStaticPaths

const toHTML = (markdown: string): string => marked(markdown, { async: false })

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { event: baseEvent } = Astro.props as Props
const event = inflateEvent(baseEvent)
const { sponsors, talks, description, date, link } = event
const pageTitle = event.title

const hasTalks = talks && talks.length > 0
const hasSponsors = sponsors && sponsors.length > 0
let location = event.location ?? null

// const eventDate = new Date(date)
// const eventDateStr = `${eventDate.getFullYear()}-${
//   eventDate.getMonth() + 1
// }`
//
// if (!location) {
//   if (eventDateStr < '2024-07') {
//     location = 'The Collective Seattle, 400 Dexter Ave N, Seattle, WA 98109'
//   } else {
//     location =
//       'Silicon Valley Bank, 920 5th Ave Suite 300, Seattle, WA 98104'
//   }
// }
---

<PageLayout pageTitle={pageTitle}>
  <div id="email-container" class="container" hidden style={{ margin: '20px' }}>
    <button id="copy-html-btn" type="button"> Copy HTML to clipboard </button>
    <div id="html-contents">
      {description && <div set:html={toHTML(description)} />}
      {
        hasSponsors &&
          sponsors.map(s => (
            <div>
              <p>
                <a href={s.url}>
                  <img
                    width="200"
                    alt={`${s.name} logo`}
                    src={`https://seattlejs.com/_public/images/sponsors/${s.image}`}
                    title={`${s.name} logo`}
                  />
                </a>
              </p>
              <p>
                Special thanks to our friends at <a href={s.url}>{s.name}</a>{' '}
                for sponsoring snacks for this month's event! üòé
              </p>
            </div>
          ))
      }
      <ul>
        <li>
          üóì{' '}
          {
            new Date(date).toLocaleDateString(undefined, {
              weekday: 'long',
              month: 'long',
              day: 'numeric',
            })
          }
        </li>
        <li>‚è∞ 5:30pm - 8:30pm</li>
        {location && <li>üìç {location}</li>}
        <li>
          üéü <a href={link}>RSVP</a>
        </li>
      </ul>
      {
        hasTalks &&
          talks.map(t => (
            <div>
              <h4
                style={{
                  fontFamily: 'headline-gothic-atf-round, sans-serif',
                  fontWeight: 700,
                  fontSize: '24px',
                }}
              >
                {t.title} by {t.speaker.name}
              </h4>
              <p>
                <img
                  width="200"
                  alt={`photo of ${t.speaker.name}`}
                  src={`https://seattlejs.com/_public/images/speakers/${t.speaker.photo}`}
                  title={`photo of ${t.speaker.name}`}
                />
              </p>
              {t.abstract && <p set:html={toHTML(t.abstract)} />}
            </div>
          ))
      }
      <p>
        See you all on{' '}
        {
          new Date(date).toLocaleDateString(undefined, {
            month: 'long',
            day: 'numeric',
          })
        }
      </p>
    </div>
  </div>

  <div id="event-page-container">
    {description && <p set:html={toHTML(description)} />}
    {location && <p>{location}</p>}
    {
      hasSponsors &&
        sponsors.map(s => (
          <div>
            <p>
              <a href={s.url}>
                <img
                  width="200"
                  alt={`${s.name} logo`}
                  src={`https://seattlejs.com/_public/images/sponsors/${s.image}`}
                  title={`${s.name} logo`}
                />
              </a>
            </p>
            <p>
              Special thanks to our friends at <a href={s.url}>{s.name}</a> for
              sponsoring snacks for this month's event! üòé
            </p>
          </div>
        ))
    }
    <ul>
      <li>
        üìÜ{' '}
        {
          new Date(date).toLocaleDateString(undefined, {
            weekday: 'long',
            month: 'long',
            day: 'numeric',
          })
        }
      </li>
      <li>‚è∞ 5:30pm - 8:30pm</li>
      {location && <li>üìç {location}</li>}
      <li>
        üéü <a href={link}>RSVP</a>
      </li>
    </ul>
    {
      hasTalks &&
        talks.map(t => (
          <div>
            <h4
              style={{
                fontFamily: 'headline-gothic-atf-round, sans-serif',
                fontWeight: 700,
                fontSize: '24px',
              }}
            >
              {t.title} by {t.speaker.name}
            </h4>
            <p>
              <img
                width="200"
                alt={`photo of ${t.speaker.name}`}
                src={`https://seattlejs.com/_public/images/speakers/${t.speaker.photo}`}
                title={`photo of ${t.speaker.name}`}
              />
            </p>
            {t.abstract && <p set:html={toHTML(t.abstract)} />}
          </div>
        ))
    }
  </div>
</PageLayout>

<script>
  import { initializeSwitch } from '@/scripts/queryParamSwitch'

  document
    .getElementById('copy-html-btn')
    ?.addEventListener('click', async () => {
      const holder = document.getElementById('html-contents')
      if (!holder) throw new Error('No HTML contents to copy')
      await navigator.clipboard.writeText(holder.innerHTML)
    })

  initializeSwitch([
    ['email', '#email-container'],
    ['', '#event-page-container'],
  ])
</script>
