---
import { Image } from 'astro:assets'
import type { Sponsor } from '@/data/types'
import { parseFileName } from '@/utils/data'

const props = Astro.props as { sponsor?: Sponsor } & Partial<Sponsor>

let sponsor = {
  ...(props.sponsor ?? {}),
  ...props,
} as Sponsor

const { tier, name, url, image } = sponsor

const sponsorId = image.replace(/\.\w+$/, '')
const imageGlob = import.meta.glob<{ default: ImageMetadata }>(
  '@/images/sponsors/*.{jpeg,jpg,png,gif,webp,svg}',
)

let imageMetadata: ImageMetadata | null = null
for (const [key, value] of Object.entries(imageGlob)) {
  if (parseFileName(key) === sponsorId) {
    imageMetadata = (await value()).default
  }
}

if (!imageMetadata) {
  throw new Error(`Image not found for sponsor ${name}`)
}
---

<style>
  .platinum img {
    width: auto;
    height: 200px;
  }

  .gold img {
    width: auto;
    height: 75px;
  }

  .gold {
    display: inline-block;
    margin: 16px;
  }
</style>

<div class={tier}>
  <a href={url} target="_new">
    <Image layout="responsive" src={imageMetadata} alt={`logo for ${name}`} />
  </a>
</div>
